
//-----------------------------------------------------------------------------
// Requires
//-----------------------------------------------------------------------------
var React = require('react');
var Radium = require('radium');

var siteActions = require('../../actions/siteActions');

//-----------------------------------------------------------------------------
// Module
//-----------------------------------------------------------------------------
var SiteProjectArrows = React.createClass({
    //---------------------------------------------------------------------------
    // Display Name
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Prop Types
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Mixins
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Statics
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Get Initial State
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Get Default Props
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Component Will Mount
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Component Did Mount
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Component Will Recieve Props
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Should Component Update
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Component Will Update
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Component Did Update
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Component Will Unmount
    //---------------------------------------------------------------------------

    //---------------------------------------------------------------------------
    // Handles
    //---------------------------------------------------------------------------

    handleClick: function(e, direction) {
        e.preventDefault();
        var tiles = this.props.seed.public.projects[this.props.project].tiles;
        var current = Number(this.props.site.private.SiteProject.current);
        var max = Object.keys(tiles).length;
        var next = current;
        if (direction === "right") {
            next = (current + 1 >= max ? max : current + 1) + "";
        }
        else if (direction === "left") {
            next = (current - 1) + "";
        }
        var changes = [
            {"key": "private.SiteProject.current", "value": next},
            {"key": "private.load", "value": "pop"}
        ];
        siteActions.changeContent(changes);
    },

    //---------------------------------------------------------------------------
    // Style
    //---------------------------------------------------------------------------

    style: function(container, current, max) {
        var style = {
            div: {
                '@media (max-width: 64em)': {
                    display: 'none'
                }
            },
            arrow: {
                position: 'fixed',
                height: '3vw',
                width: '3vw',
            },
            left: {
                display: (current === 0 ? 'none' : 'block'),
                top: '47.5vh',
                left: '0.5vw'
            },
            right: {
                display: (current === max ? 'none' : 'block'),
                top: '47.5vh',
                left: '96.5vw',
                transform: 'rotate(180deg)'
            }
        };

        return style;
    },

    //---------------------------------------------------------------------------
    // Render
    //---------------------------------------------------------------------------

    render: function() {

        var {dimensions, project,  seed, site, ...other} = this.props;
        var tiles = seed.public.projects[project].tiles;
        var current = Number(this.props.site.private.SiteProject.current);
        var max = Object.keys(tiles).length;
        var style = this.style(site.private.container, current, max);

        return (
            <div style={style.div}>
                <a href="/" onClick={(event) => this.handleClick(event, "left")}>
                    <img style={[style.arrow, style.left]} src="/assets/Site/SiteProjectArrows/arrow.png"/>
                </a>
                <a href="/" onClick={(event) => this.handleClick(event, "right")}>
                    <img style={[style.arrow, style.right]} src="/assets/Site/SiteProjectArrows/arrow.png"/>
                </a>
            </div>
        )
    }
    
});
    
//-----------------------------------------------------------------------------
// Export
//-----------------------------------------------------------------------------
module.exports = Radium(SiteProjectArrows);